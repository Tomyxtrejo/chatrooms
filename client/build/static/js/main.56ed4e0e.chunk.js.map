{"version":3,"sources":["reducers/serverReducer.js","reducers/notificationReducer.js","reducers/index.js","reducers/updateUserIdReducer.js","constants/actionConstants.js","reducers/roomReducer.js","components/NotificationContainer/NotificationIcon/index.js","components/NotificationContainer/NotificationListItem/index.js","components/NotificationContainer/index.js","components/Header/index.js","components/Layout/index.js","components/SnackbarContainer.js","components/LandingPage/Snackbar/index.js","components/modals/GenericModal.js","constants/serverEventConstants.js","server-api/index.js","actions/tryCreatingRoom.js","components/modals/CreateRoomModal.js","actions/tryJoiningRoom.js","components/modals/JoinRoomModal.js","components/ModalContainer/index.js","components/LandingPage/LandingPage.js","components/LandingPage/index.js","components/errors/ServerConnectionFailed/index.js","components/errors/PageNotFound/index.js","containers/RoomListContainer/index.js","components/App/index.js","containers/AppContainer/index.js","actions/connectToServer.js","actions/updateUserId.js","actions/createNotification.js","index.js"],"names":["INITIAL_STATE","connected","length","data","combineReducers","user","state","action","type","id","payload","serverConnection","roomMetadata","room","messages","messageReducer","notifications","console","log","metadata","props","visibility","shouldShowBadge","icon","faBell","size","faIdBadge","style","CustomItem","React","forwardRef","ref","children","className","NotificationListItem","notification","title","DropdownItem","as","NotificationContainer","getNotificationListPopover","Popover","Title","Content","getDropdownMenuContent","this","Object","keys","map","key","NotificationIcon","OverlayTrigger","trigger","placement","rootClose","overlay","getWrappedNotificationIcon","Component","connect","backgroundColor","Header","Navbar","collapseOnSelect","expand","sticky","Container","Brand","to","Nav","NavItem","faUser","Layout","useStyles","makeStyles","theme","success","green","error","palette","dark","message","display","alignItems","fontSize","iconVariant","opacity","marginRight","spacing","iconVariants","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","show","styleClasses","Icon","variant","open","autoHideDuration","onClose","SnackbarContent","clsx","actions","Snackbar","SnackbarContainer","header","onSnackbarClose","Variant","GenericModal","Modal","visible","onHide","hideModal","centered","closeButton","Body","content","Footer","ROOM_EVENT","ROOM_JOIN_ATTEMPT","ROOM_JOIN_PERMISSION_SEND","ROOM_JOIN_PERMISSION_RECIEVE","CREATE_ROOM","NEW_MESSAGE_RECIEVED","SEND_MESSAGE","USER_ID_RECIEVE","socket","openSocket","reconnection","autoConnect","connectToServer","onConnectionFailed","on","sendMessage","emit","events","onMessageRecieved","callback","onRoomJoined","onRoomJoinRequestRecieved","onRoomJoinPermissionRecieved","onUserIdRecieved","createRoom","roomName","roomType","roomOwner","joinRoom","roomId","JOIN_ROOM","createdRoom","tryCreatingRoom","onSuccess","onFailure","dispatch","getState","a","async","serverApi","status","reason","CreateRoomModal","inputValue","radioSelectedValue","isFormLoading","updateCheckedRadioInput","e","setState","target","value","onFormSubmit","event","preventDefault","restoreInitialState","onTextInputChange","onCancelButtonClick","name","tabIndex","required","onChange","Form","onSubmit","Label","Control","renderRadioInputs","spinner","Spinner","animation","role","disabled","form","Fragment","onClick","renderCreateRoomButton","getModalActions","getModalContent","tryJoiningRoom","onPermissionPending","onPermissionRequestCompleted","JoinRoomModal","onJoinRoomPermissionRecieved","inputChanged","errorMessage","loading","placeholder","autoFocus","ModalContainer","LandingPage","Button","onCreateRoomButtonClick","onJoinRoomButtonClick","modalProps","snackbarProps","LandingPageContainer","shouldShowSnackbar","snackbarMessage","snackbarVariant","shouldShowModal","modalName","capitalizeFirstWord","sentence","charAt","toUpperCase","slice","getSuccessMessage","actionType","getFailureMessage","failureReason","successMessage","showSnackbar","failureMessage","onJoinRoomPermissionPending","permissionStatus","showModal","getModalProps","ServerConnectionFailed","PageNotFound","RoomListContainer","App","serverConnectionFailed","exact","path","component","AppContainer","onServerConnectionFailed","userId","updateUserId","whoSent","createNotification","composeEnhanchers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.56ed4e0e.chunk.js","sourcesContent":["import { CONNECT_TO_SERVER } from '../constants/actionConstants';\n\nconst INITIAL_STATE = {\n    connected: false\n}\n\nexport default (state = INITIAL_STATE, action) => {\n    if (action.type === CONNECT_TO_SERVER) {\n        return {connected: action.payload.connected}\n    }\n\n    return state;\n}","import { CREATE_NOTIFICATION } from \"../constants/actionConstants\";\n\nconst INITIAL_STATE = { length: 0, data: {} }\n\nexport default (state = INITIAL_STATE, action) => {\n    console.log(\"reducer!\")\n    switch (action.type) {\n        case CREATE_NOTIFICATION:\n            const { id, ...metadata } = action.payload;\n            console.log('id: ' + id + \"\\nmetadata:\");\n            console.log(metadata)\n            return {\n                ...state,\n                length: state.length + 1,\n                data: { ...state.data, [id]: metadata }\n            };\n\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\n\nimport serverReducer from './serverReducer';\nimport messageReducer from './messageReducer';\nimport roomReducer from './roomReducer';\nimport updateUserIdReducer from './updateUserIdReducer';\nimport notificationReducer from './notificationReducer';\n\nexport default combineReducers({\n    user: updateUserIdReducer,\n    serverConnection: serverReducer,\n    roomMetadata: roomReducer,\n    messages: messageReducer,\n    notifications: notificationReducer\n})\n","import { UPDATE_USER_ID } from '../constants/actionConstants';\n\nexport default (state = {}, action) => {\n    if (action.type === UPDATE_USER_ID) {\n        return { ...state, id: action.payload };\n    }\n    return state;\n}","export const CONNECT_TO_SERVER = \"CONNECT_TO_SERVER\";\nexport const RECIEVE_MESSAGE = \"RECIEVE_MESSAGE\";\n\nexport const CREATE_ROOM = \"CREATE_ROOM\";\nexport const JOIN_ROOM = \"JOIN_ROOM\";\n\nexport const UPDATE_USER_ID = \"UPDATE_USER_ID\";\nexport const CREATE_NOTIFICATION = \"CREATE_NOTIFICATION\";","import {\n    CREATE_ROOM,\n    JOIN_ROOM\n\n}\n    from '../constants/actionConstants';\n\nexport default (state = {}, action) => {\n    const room = action.payload;\n    switch (action.type) {\n        case CREATE_ROOM:\n            return { ...state, [room.id]: room };\n        case JOIN_ROOM:\n            return { ...state, [room.id]: room };\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBell, faIdBadge } from '@fortawesome/free-solid-svg-icons';\n\nexport default (props) => {\n    const visibility = props.shouldShowBadge ? \"visible\" : \"hidden\";\n    return (\n        <FontAwesomeIcon icon={faBell} size=\"lg\">\n            <FontAwesomeIcon icon={faIdBadge} style={{ visibility: visibility }} />\n        </FontAwesomeIcon>\n    );\n}","import React from 'react';\nimport DropdownItem from 'react-bootstrap/DropdownItem';\n\nconst CustomItem = React.forwardRef(({ children, className, style }, ref) => (\n    <div\n        ref={ref}\n        className={className}\n        style={style}\n    >\n        {children}\n    </div>\n))\n\nconst NotificationListItem = (props) => {\n    console.log(\"item. title: \" + props.notification.title)\n    return (\n        <DropdownItem as={CustomItem}>\n            nblah abl blhjljaljgjjkfgklkjkgjkfgjfkgj\n        </DropdownItem>\n    );\n}\n\nexport default NotificationListItem;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Popover from 'react-bootstrap/Popover';\nimport NotificationIcon from './NotificationIcon';\nimport NotificationListItem from './NotificationListItem';\n\nimport './NotificationContainer.scss'\n\nclass NotificationContainer extends React.Component {\n    getDropdownMenuContent() {\n        const { notifications } = this.props;\n        if (notifications.length === 0) {\n            return <div className=\"item\">You don't have any notifications</div>\n        }\n\n        return (\n            Object.keys(notifications.data).map(id => {\n                return (\n                    <div key={id}>\n                        <NotificationListItem\n                            notification={notifications.data[id]}\n                        />\n                        <hr />\n                    </div>\n                );\n            })\n        );\n    }\n\n    getNotificationListPopover = () => {\n        return (\n            <Popover>\n                <Popover.Title as=\"h2\">Notifications</Popover.Title>\n                <Popover.Content>\n                    {this.getDropdownMenuContent()}\n                </Popover.Content>\n            </Popover>\n        );\n    }\n\n    getWrappedNotificationIcon() {\n        return (\n            <span className=\"header-icon nav-item\">\n                <NotificationIcon shouldShowBadge={this.props.notifications.length !== 0} />\n            </span>\n        );\n    }\n\n    render() {\n        return (\n            <OverlayTrigger\n                trigger=\"click\"\n                placement=\"bottom\"\n                rootClose={true}\n                overlay={this.getNotificationListPopover()}\n            >\n                {this.getWrappedNotificationIcon()}\n            </OverlayTrigger>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { notifications: state.notifications }\n}\n\nexport default connect(mapStateToProps, null)(NotificationContainer);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport NavItem from 'react-bootstrap/NavItem';\nimport Container from 'react-bootstrap/Container';\nimport NotificationContainer from '../NotificationContainer';\nimport './Header.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\n\nconst style = { backgroundColor: \"#23282d\" }\n\nconst Header = () => {\n    return (\n        <Navbar collapseOnSelect style={style} expand=\"large\" sticky=\"top\">\n            <Container>\n                <Navbar.Brand>\n                    <Link to=\"/\" className=\"logo\"> ChatRooms </Link>\n                </Navbar.Brand>\n\n                <Nav className=\"justify-content-end flex-row\">\n                    <Link to=\"/rooms\" className=\"header-text\">Rooms</Link>\n                    <NotificationContainer />\n                    <NavItem as={\"span\"} className=\"header-icon\" >\n                        <FontAwesomeIcon icon={faUser} size=\"lg\" />\n                    </NavItem>\n                </Nav>\n            </Container>\n        </Navbar>\n    );\n}\n\nexport default Header;\n\n/*\nLogo credits\n\n<div>\n    Icons made by\n    <a href=\"https://www.flaticon.com/authors/smashicons\" title=\"Smashicons\">\n        Smashicons\n    </a>\n    from\n    <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\n        www.flaticon.com\n    </a>\n</div>\n*/","import React from 'react';\nimport Header from '../Header';\n\nconst Layout = (props) => {\n    return (\n        <div className=\"app\">\n            <Header />\n            {props.children}\n        </div>\n    )\n}\n\nexport default Layout;\n","import React from 'react';\nimport clsx from 'clsx';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { green } from '@material-ui/core/colors';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    success: {\n        backgroundColor: green[600],\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    message: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    icon: {\n        fontSize: 20,\n    },\n    iconVariant: {\n        opacity: 0.9,\n        marginRight: theme.spacing(1)\n    }\n}));\n\nconst iconVariants = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon,\n};\n\nexport default (props) => {\n    if (!props.show) {\n        //relying on snackbar to \"not show\" according to props.show introduced latency in hiding the snackbar\n        //Hence, simply returning null when not showing snackbar.\n        //However, do not remove \"open\" attribute from Snackbar \n        //as it is false by default which will always hide the Snackbar\n        return null;\n    }\n\n    const styleClasses = useStyles();\n    const Icon = iconVariants[props.variant];\n    return (\n        <Snackbar\n            open={props.show}\n            autoHideDuration={props.autoHideDuration || 3000}\n            onClose={props.onClose}\n        >\n            <SnackbarContent\n                className={clsx(styleClasses[props.variant])}\n                message={\n                    <span className={styleClasses.message}>\n                        <Icon className={clsx(styleClasses.icon, styleClasses.iconVariant)} />\n                        {props.message}\n                    </span>\n                }\n                action={props.actions}\n            />\n        </Snackbar>\n    );\n}\n","import React from 'react';\n\nimport SnackbarContainer from '../../SnackbarContainer';\n\nconst Snackbar = (props) => {\n    return (\n        <SnackbarContainer\n            header={props.header}\n            message={props.message}\n            show={props.show}\n            onClose={props.onSnackbarClose}\n            variant={props.Variant}\n            actions={props.actions}\n            autoHideDuration={props.autoHideDuration || 3000} />\n    );\n}\n\nexport default Snackbar;\n","import React from 'react';\n\nimport Modal from 'react-bootstrap/Modal';\n\nconst GenericModal = (props) => {\n    return (\n        <Modal\n            show={props.visible}\n            onHide={props.hideModal}\n            centered\n        >\n            <Modal.Header closeButton onHide={props.hideModal}>\n                <Modal.Title>\n                    {props.header}\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                {props.content}\n            </Modal.Body>\n            <Modal.Footer>\n                {props.actions}    \n            </Modal.Footer>\n        </Modal>\n    )\n}\n\nexport default GenericModal;\n","export default {\n    ROOM_EVENT: \"event:room\",\n    ROOM_JOIN_ATTEMPT: \"room_join_attempt\",\n    ROOM_JOIN_PERMISSION_SEND: \"room_join_permission_send\",\n    ROOM_JOIN_PERMISSION_RECIEVE: \"room_join_permission_recieve\",\n    CREATE_ROOM: \"create_room\",\n\n    NEW_MESSAGE_RECIEVED: \"new_message_recieved\",\n    SEND_MESSAGE: \"send_message\",\n    USER_ID_RECIEVE: \"user_id_recieve\",\n}","import openSocket from 'socket.io-client';\n\nimport events from '../constants/serverEventConstants';\n\nclass ServerApi {\n    socket = openSocket('/', { reconnection: false, autoConnect: false });\n\n    connectToServer = (onConnectionFailed) => {\n        this.socket.connect();\n        this.socket.on('connect_error', onConnectionFailed);\n        this.socket.on('connect', () => console.log(\"connected\"))\n    }\n\n    sendMessage = (message) => {\n        this.socket.emit(events.SEND_MESSAGE, message);\n    }\n\n    onMessageRecieved = (callback) => {\n        this.socket.on(events.NEW_MESSAGE_RECIEVED, callback);\n    }\n\n    onRoomJoined = (callback) => {\n        //this.socket.on(events.ROOM_EVENT, ROOM_JOINED, callback)\n    }\n\n    onRoomJoinRequestRecieved = (callback) => {\n        //this.socket.on(events.ROOM_EVENT, ROOM_JOIN_REQUEST, callback);\n    }\n\n    onRoomJoinPermissionRecieved = (callback) => {\n        this.socket.on(events.ROOM_EVENT, events.ROOM_JOIN_PERMISSION_RECIEVE, callback);\n    }\n\n    onUserIdRecieved = (callback) => {\n        this.socket.on(events.USER_ID_RECIEVE, callback);\n    }\n\n    createRoom = (roomName, roomType, roomOwner, callback) => {\n        return this.socket.emit(events.ROOM_EVENT, events.CREATE_ROOM, roomName, roomType, roomOwner, callback);\n    }\n\n    joinRoom = (roomId, callback) => {\n        return this.socket.emit(events.ROOM_EVENT, events.JOIN_ROOM, roomId, callback);\n    }\n}\n\nexport default new ServerApi();\n","import { CREATE_ROOM } from '../constants/actionConstants';\n\nimport serverApi from '../server-api';\n\nconst tryCreatingRoom = (roomName, roomType, onSuccess, onFailure) =>\n    async (dispatch, getState) => {\n        await serverApi.createRoom(roomName, roomType, getState().user.id, (data) => {\n            if (data.status === \"ok\") {\n                console.log(data.room);\n                dispatch(createRoom(data.room));\n                onSuccess();\n            }\n            else {\n                onFailure(data.reason);\n            }\n        });\n    }\n\nconst createRoom = (createdRoom) => {\n    return {\n        type: CREATE_ROOM,\n        payload: createdRoom\n    };\n}\n\nexport default tryCreatingRoom;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport Form from 'react-bootstrap/Form';\nimport Spinner from 'react-bootstrap/Spinner';\n\nimport GenericModal from './GenericModal';\nimport tryCreatingRoom from '../../actions/tryCreatingRoom';\n\nclass CreateRoomModal extends React.Component {\n    state = { inputValue: \"\", radioSelectedValue: null, isFormLoading: false }\n\n    updateCheckedRadioInput = (e) => {\n        this.setState({ radioSelectedValue: e.target.value });\n    }\n\n    onFormSubmit = (event) => {\n        event.preventDefault();\n        const roomName = this.state.inputValue;\n        const roomType = this.state.radioSelectedValue;\n        this.props.tryCreatingRoom(roomName, roomType, this.onSuccess, this.onFailure);\n        this.setState({ isFormLoading: true });\n    }\n\n    restoreInitialState = () => {\n        this.setState({ inputValue: \"\", radioSelectedValue: null, isFormLoading: false });\n    }\n\n    onSuccess = () => {\n        this.restoreInitialState();\n        this.props.onSuccess();\n    }\n\n    onFailure = (reason) => {\n        this.restoreInitialState();\n        this.props.onFailure(reason);\n    }\n\n    onTextInputChange = (event) => {\n        this.setState({\n            inputValue: event.target.value\n        })\n    }\n\n    onCancelButtonClick = () => {\n        this.restoreInitialState();\n        this.props.hideModal();\n    }\n\n    renderRadioInputs() {\n        return (\n            <div className=\"required field\">\n                <label>Select Room type:</label>\n                <div className=\"field\">\n                    <div className=\"ui radio checkbox\">\n                        <input type=\"radio\" value=\"public\" name=\"room-type\" tabIndex=\"0\" required onChange={(e) => this.updateCheckedRadioInput(e)} />\n                        <label>\n                            <i className=\"globe icon\" /> Public\n                        </label>\n                    </div>\n                </div>\n                <div className=\"field\">\n                    <div className=\"ui radio checkbox\">\n                        <input type=\"radio\" value=\"unlisted\" name=\"room-type\" tabIndex=\"0\" onChange={(e) => this.updateCheckedRadioInput(e)} />\n                        <label>\n                            <i className=\"paperclip icon\" /> Unlisted\n                        </label>\n                    </div>\n                </div>\n                <div className=\"field\">\n                    <div className=\"ui radio checkbox\">\n                        <input type=\"radio\" value=\"private\" name=\"room-type\" tabIndex=\"0\" onChange={(e) => this.updateCheckedRadioInput(e)} />\n                        <label>\n                            <i className=\"lock icon\" /> Private\n                        </label>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    getModalContent() {\n        return (\n            <Form onSubmit={this.onFormSubmit} id=\"create-room-form\">\n                <Form.Label><strong>Enter Room Name:</strong></Form.Label>\n                <Form.Control\n                    type=\"text\"\n                    value={this.state.inputValue}\n                    onChange={this.onTextInputChange}\n                    required={true}\n                />\n                {this.renderRadioInputs()}\n            </Form>\n        );\n    }\n\n    renderCreateRoomButton() {\n        const spinner = <Spinner\n            style={{ marginRight: \"10px\" }}\n            as=\"span\"\n            animation=\"border\"\n            role=\"status\"\n            size=\"sm\"\n        />;\n\n        const disabled = this.state.isFormLoading ? \"disabled\" : \"\";\n        return (\n            <button\n                type=\"submit\"\n                className={`ui button orange ${disabled}`}\n                form=\"create-room-form\"\n            >\n                {this.state.isFormLoading ? spinner : null}\n                Create\n            </button>\n        );\n    }\n\n    getModalActions() {\n        return (\n            <React.Fragment>\n                <button className=\"ui button\" onClick={this.onCancelButtonClick}>\n                    Cancel\n                </button>\n\n                {this.renderCreateRoomButton()}\n            </React.Fragment>\n        );\n    }\n\n    render() {\n        return (\n            <GenericModal\n                header=\"Create Room\"\n                actions={this.getModalActions()}\n                content={this.getModalContent()}\n                {...this.props}\n            />\n        );\n    }\n}\n\nexport default connect(\n    null,\n    { tryCreatingRoom }\n)(CreateRoomModal);\n\n","import { JOIN_ROOM } from '../constants/actionConstants';\n\nimport serverApi from '../server-api';\n\nconst joinRoom = (room) => {\n    return {\n        type: JOIN_ROOM,\n        payload: room\n    };\n}\n\nconst tryJoiningRoom =\n    (roomId, onSuccess, onPermissionPending, onPermissionRequestCompleted, onFailure) =>\n        async dispatch => {\n            await serverApi.joinRoom(roomId, (data) => {\n                if (data.status === \"ok\") {\n                    dispatch(joinRoom(data.room));\n                    onSuccess();\n                }\n                else if (data.status === \"permission_pending\") {\n                    onPermissionPending();\n                    serverApi.onRoomJoinPermissionRecieved(onPermissionRequestCompleted);\n                }\n                else {\n                    onFailure(data.reason);\n                }\n            });\n        }\n\nexport default tryJoiningRoom;","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport GenericModal from './GenericModal';\nimport tryJoiningRoom from '../../actions/tryJoiningRoom';\n\nclass JoinRoomModal extends React.Component {\n    state = { inputValue: \"\", isFormLoading: false }\n\n    onFormSubmit = (event) => {\n        event.preventDefault();\n        this.setState({ isFormLoading: true });\n        this.props.tryJoiningRoom(\n            this.state.inputValue,\n            this.props.onSuccess,\n            this.props.onPermissionPending,\n            this.props.onJoinRoomPermissionRecieved,\n            this.props.onFailure\n        )\n    }\n\n    inputChanged = (e) => {\n        this.setState({\n            inputValue: e.target.value,\n            errorMessage: null\n        })\n    }\n\n    onCancelButtonClick = () => {\n        this.setState({ inputValue: \"\", isFormLoading: false });\n        this.props.hideModal();\n    }\n\n    getModalActions() {\n        const disabled = this.state.isFormLoading ? \"disabled\" : \"\";\n        return (\n            <React.Fragment>\n                <button className=\"ui button\" onClick={this.onCancelButtonClick}>\n                    Cancel\n                </button>\n\n                <button type=\"submit\" form=\"join-room-form\" className={`ui button orange ${disabled}`}>\n                    Join\n                </button>\n            </React.Fragment>\n        );\n    }\n\n    getModalContent() {\n        const loading = this.state.isFormLoading ? \"loading\" : \"\";\n        return (\n            <form className={`ui form ${loading}`} id=\"join-room-form\" onSubmit={this.onFormSubmit}>\n                <div className=\"required field\">\n                    <label>Enter Room ID:</label>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Room Number\"\n                        value={this.state.inputValue}\n                        onChange={this.inputChanged}\n                        autoFocus={true}\n                        required={true}\n                    />\n                </div>\n            </form>\n        );\n    }\n\n    render() {\n        return (\n            <GenericModal\n                header=\"Join Room\"\n                actions={this.getModalActions()}\n                content={this.getModalContent()}\n                {...this.props}\n            />\n        );\n    }\n}\n\nexport default connect(null, { tryJoiningRoom })(JoinRoomModal);\n","import React from 'react';\n\nimport CreateRoomModal from '../modals/CreateRoomModal';\nimport JoinRoomModal from '../modals/JoinRoomModal';\n\nconst ModalContainer = (props) => {\n    const getModal = (name) => {\n        return name === 'create' ? <CreateRoomModal {...props} /> : <JoinRoomModal {...props} />\n    }\n\n    return getModal(props.name);\n}\n\nexport default ModalContainer;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\n\nimport Snackbar from './Snackbar';\nimport ModalContainer from '../ModalContainer';\n\nconst LandingPage = (props) => {\n    return (\n        <div className=\"landing-page\">\n            <div className=\"inner-wrapper\">\n                <p>Welcome to Chatrooms!</p>\n\n                <div className=\"buttons-container\">\n                    <Button onClick={props.onCreateRoomButtonClick}>\n                        Create Room\n                    </Button>\n\n                    <Button onClick={props.onJoinRoomButtonClick}>\n                        Join Room\n                    </Button>\n                </div>\n\n            </div>\n            <ModalContainer {...props.modalProps}/>\n            <Snackbar {...props.snackbarProps}/>\n        </div>\n    );\n}\n\nexport default LandingPage;\n","import React from 'react';\n\nimport './LandingPage.scss';\nimport LandingPage from './LandingPage';\n\nclass LandingPageContainer extends React.Component {\n    state = {\n        shouldShowSnackbar: false,\n        snackbarMessage: \"\",\n        snackbarVariant: \"info\",\n        shouldShowModal: false,\n        modalName: null\n    }\n\n    capitalizeFirstWord = (sentence) => {\n        //\"sentence &&\" handles undefined or an empty sentence\n        return sentence && sentence.charAt(0).toUpperCase() + sentence.slice(1);\n    }\n\n    getSuccessMessage = (actionType) => {\n        switch (actionType) {\n            case \"create-room\":\n                return \"Room created Successfully!\";\n            case \"join-room\":\n                return \"Room joined Successfully!\";\n            default:\n                return \"Operation Successful!\";\n        }\n    }\n\n    getFailureMessage = (actionType, failureReason) => {\n        failureReason = this.capitalizeFirstWord(failureReason);\n        switch (actionType) {\n            case \"create-room\":\n                return `Failed to create Room! Reason: ${failureReason}`;\n            case \"join-room\":\n                return `Failed to join Room! Reason: ${failureReason}`;\n            default:\n                return \"Operation Failed!\";\n        }\n    }\n\n    onSuccess = (actionType) => {\n        console.log(\"landing page on success callback\")\n        this.hideModal();\n        const successMessage = this.getSuccessMessage(actionType);\n        this.showSnackbar(\"success\", successMessage);\n    }\n\n    onFailure = (actionType, reason) => {\n        console.log(\"landing page on failure callback\")\n        this.hideModal();\n        const failureMessage = this.getFailureMessage(actionType, reason);\n        this.showSnackbar(\"error\", failureMessage);\n    }\n\n    onJoinRoomPermissionPending = () => {\n        console.log('mewo')\n        this.showSnackbar(\"info\", \"Private Room. Waiting for permission from Room owner\");\n    }\n\n    onJoinRoomPermissionRecieved = (permissionStatus) => {\n        if (permissionStatus === \"ok\") {\n            this.hideModal();\n            this.showSnackbar(\"success\", \"Room access permission granted!\");\n        } else {\n            this.hideModal();\n            this.showSnackbar(\"error\", \"Room access permission rejected!\");\n        }\n    }\n\n    showModal = (modalName) => {\n        this.setState({\n            shouldShowModal: true,\n            modalName: modalName\n        })\n    }\n\n    hideModal = () => {\n        this.setState({\n            shouldShowModal: false\n        })\n    }\n\n    showSnackbar = (variant, message) => {\n        this.setState({\n            shouldShowSnackbar: true,\n            snackbarVariant: variant,\n            snackbarMessage: message\n        })\n    }\n\n    onSnackbarClose = () => {\n        this.setState({\n            shouldShowSnackbar: false,\n            snackbarVariant: \"info\",\n            snackbarMessage: \"\"\n        })\n    }\n\n    getModalProps() {\n        return {\n            name: this.state.modalName,\n            hideModal: this.hideModal,\n            visible: this.state.shouldShowModal,\n            onSuccess: this.onSuccess,\n            onFailure: this.onFailure,\n            onPermissionPending: this.onJoinRoomPermissionPending\n        }\n    }\n\n    getSnackbarProps(){\n        return {\n            onClose: this.onSnackbarClose,\n\n        }\n    }\n\n    render() {\n        return (\n            <LandingPage\n                modalProps={this.getModalProps()}\n                onCreateRoomButtonClick={() => this.showModal('create')}\n                onJoinRoomButtonClick={() => this.showModal('join')} \n            />\n        );\n    }\n}\n\nexport default LandingPageContainer;","import React from 'react';\n\nimport './ServerConnectionFailed.scss'\n\nconst ServerConnectionFailed = () => {\n    console.log('component connection failed')\n    return (\n        <div className=\"connection-failed\">\n            Oops! Unable to connect to the server. Please visit later\n        </div>\n    );\n}\n\nexport default ServerConnectionFailed;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\n\nimport './PageNotFound.scss';\n\nconst PageNotFound = () => {\n    return (\n        <div className=\"error-404\">\n            Error 404: Page Not Found.\n            <Link to=\"/\">\n                <Button>Home</Button>\n            </Link>\n        </div>\n    );\n}\n\nexport default PageNotFound;\n","import React from 'react';\n\nclass RoomListContainer extends React.Component {\n    render() {\n        return (\n            <div className=\"room-list-container\">\n                RoomListContainer\n            </div>\n        );\n    }\n}\n\nexport default RoomListContainer;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport Layout from '../Layout';\nimport LandingPage from '../LandingPage';\nimport ServerConnectionFailed from '../errors/ServerConnectionFailed';\nimport PageNotFound from '../errors/PageNotFound';\n\nimport './App.scss';\nimport RoomListContainer from '../../containers/RoomListContainer';\n\nconst App = (props) => {\n\n    const renderBody = () => {\n        if (props.serverConnectionFailed) {\n            return <ServerConnectionFailed />;\n        }\n        return (\n            <Switch>\n                <Route exact path=\"/\" component={LandingPage} />\n                <Route exact path=\"/rooms\" component={RoomListContainer} />\n                <Route exact path=\"*\" component={PageNotFound} />\n            </Switch>\n        );\n    }\n\n    return (\n        <BrowserRouter>\n            <Layout>\n                {renderBody()}\n            </Layout>\n        </BrowserRouter>\n    );\n}\n\n\nexport default App;","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport App from '../../components/App';\nimport serverApi from '../../server-api';\nimport connectToServer from '../../actions/connectToServer';\nimport updateUserId from '../../actions/updateUserId';\nimport createNotification from '../../actions/createNotification';\n\nclass AppContainer extends React.Component {\n    state = {\n        serverConnectionFailed: false\n    }\n\n    componentDidMount() {\n        this.props.connectToServer(this.onServerConnectionFailed);\n        serverApi.onUserIdRecieved((userId) => this.props.updateUserId(userId));\n        serverApi.onRoomJoinRequestRecieved(whoSent => {\n            console.log(whoSent + \" wants to join your room\")\n            this.props.createNotification(\n                \"Room join request\",\n                whoSent + \" wants to join your room\",\n                null)\n        })\n    }\n\n    onServerConnectionFailed = () => {\n        this.setState({ serverConnectionFailed: true })\n    }\n\n    render() {\n        return (\n            <App {...this.state} />\n        );\n    }\n}\n\nexport default connect(\n    null,\n    { connectToServer, updateUserId, createNotification }\n)(AppContainer);\n","import serverApi from '../server-api';\n\nimport { CONNECT_TO_SERVER } from '../constants/actionConstants'\n\nexport default (onConnectionFailed) => async (dispatch) => {\n    await serverApi.connectToServer(onConnectionFailed);\n    dispatch({ type: CONNECT_TO_SERVER, payload: { connected: true } })\n}\n","import { UPDATE_USER_ID } from '../constants/actionConstants';\n\nexport default (userId) => {\n    console.log('update user id: ' + userId);\n    return {\n        type: UPDATE_USER_ID,\n        payload: userId\n    }\n}","import { CREATE_NOTIFICATION } from \"../constants/actionConstants\";\n\nexport default (title, content, actions) => {\n    let action = {\n        type: CREATE_NOTIFICATION,\n        payload: { id: \"id\", title, content, actions }\n    };\n    console.log(\"action: \");\n    console.log(action)\n    return action;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport reducers from './reducers'\nimport AppContainer from './containers/AppContainer';\n\nconst composeEnhanchers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhanchers(\n    applyMiddleware(thunk)\n));\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <AppContainer />\n    </Provider>,\n    document.querySelector(\"#root\")\n);"],"sourceRoot":""}